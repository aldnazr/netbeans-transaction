
CREATE TABLE brand (
    ID_BRAND INT PRIMARY KEY,
    NAMA_BRAND VARCHAR(100) UNIQUE
);

CREATE TABLE phones (
    ID_PHONE INT PRIMARY KEY,
    ID_BRAND INT,
    NAMA_HANDPHONE VARCHAR(100) UNIQUE,
    DESKRIPSI VARCHAR(255),
    HARGA INT,
    STOK INT
);

CREATE TABLE users (
    ID_USER INT PRIMARY KEY,
    NAMA_LENGKAP VARCHAR(100) NOT NULL,
    TANGGAL_LAHIR DATE,
    GENDER VARCHAR(10) NOT NULL,
    ALAMAT VARCHAR(255),
    EMAIL VARCHAR(100) UNIQUE NOT NULL,
    NO_TELP VARCHAR(100) UNIQUE,
    TIPE_AKUN VARCHAR(10) NOT NULL,
    USERNAME VARCHAR(100),
    PASSWORD VARCHAR(100)
);

CREATE TABLE sessions (
    ID_SESSION INT PRIMARY KEY,
    ID_USER INT,
    WAKTU_LOGIN TIMESTAMP
);

CREATE TABLE transaksi (
    ID_TRANSAKSI INT PRIMARY KEY,
    ID_USER INT,
    NAMA_PELANGGAN VARCHAR(100),
    TANGGAL TIMESTAMP,
    TOTAL_BAYAR INT
);

CREATE TABLE detail_transaksi (
    ID_DETAIL_TRANSAKSI INT PRIMARY KEY,
    ID_TRANSAKSI INT,
    ID_PHONE INT,
    JUMLAH_PEMBELIAN INT
);


--
--  ALTER TABLE FOR FOREIGN KEY
--

ALTER TABLE phones
  ADD FOREIGN KEY (ID_BRAND) REFERENCES brand (ID_BRAND);


ALTER TABLE transaksi
  ADD FOREIGN KEY (ID_USER) REFERENCES users (ID_USER);


ALTER TABLE sessions
  ADD FOREIGN KEY (ID_USER) REFERENCES users (ID_USER);


ALTER TABLE detail_transaksi
    ADD FOREIGN KEY (ID_PHONE) REFERENCES phones (ID_PHONE);


ALTER TABLE detail_transaksi
    ADD FOREIGN KEY (ID_TRANSAKSI) REFERENCES transaksi (ID_TRANSAKSI);


-----------------------------------------------
--        SEQUENCE FOR AUTO INCREMENT        --
-----------------------------------------------


CREATE SEQUENCE sequence_brand
    START WITH 1
    INCREMENT BY 1
NOMAXVALUE;


CREATE SEQUENCE sequence_phones
    START WITH 1
    INCREMENT BY 1
NOMAXVALUE;


CREATE SEQUENCE sequence_users
    START WITH 1
    INCREMENT BY 1
NOMAXVALUE;


CREATE SEQUENCE sequence_transaksi
    START WITH 100
    INCREMENT BY 1
NOMAXVALUE;


CREATE SEQUENCE sequence_detail_transaksi
    START WITH 1
    INCREMENT BY 1
NOMAXVALUE;

CREATE SEQUENCE sequence_sessions
    START WITH 1
    INCREMENT BY 1
NOMAXVALUE;


---------------------------
--        TRIGGER        --
---------------------------

CREATE OR REPLACE TRIGGER autoincrement_brand
BEFORE INSERT ON brand
FOR EACH ROW
BEGIN
    SELECT sequence_brand.NEXTVAL
    INTO :new.id_brand
    FROM dual;
END;
/

CREATE OR REPLACE TRIGGER autoincrement_phones
BEFORE INSERT ON phones
FOR EACH ROW
BEGIN
    SELECT sequence_phones.NEXTVAL
    INTO :new.ID_PHONE
    FROM dual;
END;
/

CREATE OR REPLACE TRIGGER autoincrement_users
BEFORE INSERT ON users
FOR EACH ROW
BEGIN
    SELECT sequence_users.NEXTVAL
    INTO :new.id_user
    FROM dual;
END;
/

CREATE OR REPLACE TRIGGER autoincrement_transaksi
BEFORE INSERT ON transaksi
FOR EACH ROW
BEGIN
    SELECT sequence_transaksi.NEXTVAL
    INTO :new.id_transaksi
    FROM dual;
END;
/

CREATE OR REPLACE TRIGGER auto_isi_id_transaksi
BEFORE INSERT ON detail_transaksi
FOR EACH ROW
BEGIN
    SELECT MAX(ID_TRANSAKSI) 
    INTO :new.id_transaksi
    FROM transaksi;
END;
/

CREATE OR REPLACE TRIGGER autoincrement_detail_transaksi
BEFORE INSERT ON detail_transaksi
FOR EACH ROW
BEGIN
    SELECT sequence_detail_transaksi.NEXTVAL
    INTO :new.id_detail_transaksi
    FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER autoincrement_sessions
BEFORE INSERT ON sessions
FOR EACH ROW
BEGIN
    SELECT sequence_sessions.NEXTVAL
    INTO :new.id_session
    FROM DUAL;
END;
/

---------------------------
--       FUNCTION        --
---------------------------

CREATE OR REPLACE FUNCTION tambah_phone(
    p_id_brand INT,
    p_nama_handphone VARCHAR2,
    p_deskripsi VARCHAR2,
    p_harga INT,
    p_stok INT
)
RETURN VARCHAR2
IS
BEGIN
    INSERT INTO phones(id_brand, nama_handphone, deskripsi, harga, stok)
    VALUES (p_id_brand, p_nama_handphone, p_deskripsi, p_harga, p_stok);

    RETURN 'Phone berhasil ditambahkan';
EXCEPTION
    WHEN OTHERS THEN
        RETURN 'Gagal menambahkan phone: ' || SQLERRM;
END;
/

CREATE OR REPLACE FUNCTION hapus_phone(p_id_phone INT) 
RETURN VARCHAR2 
IS
BEGIN
    DELETE FROM phones
    WHERE id_phone = p_id_phone;

    RETURN 'Phone berhasil dihapus';
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN 'Phone tidak ditemukan';
    WHEN OTHERS THEN
        RETURN 'Gagal menghapus phone: ' || SQLERRM;
END;
/

---------------------------
--       PROCEDURE       --
---------------------------

CREATE OR REPLACE PROCEDURE insertBrand(
    p_nama_brand VARCHAR2
)
AS
BEGIN
    INSERT INTO BRAND (NAMA_BRAND) 
    VALUES (p_nama_brand);
END;
/


CREATE OR REPLACE PROCEDURE updateBrand(
    p_id_brand INT,
    p_nama_brand VARCHAR2
)
AS
BEGIN
    UPDATE BRAND 
    SET NAMA_BRAND = p_nama_brand 
    WHERE ID_BRAND = p_id_brand;
END;
/


CREATE OR REPLACE PROCEDURE deleteBrand (
    p_id_brand INT
)
AS
BEGIN
    DELETE FROM BRAND 
    WHERE ID_BRAND = p_id_brand;
END;
/

COMMIT;

---------------------------
--          RUN          --
---------------------------

-- FUNCTION
SELECT getMaxTransaksiId FROM DUAL;
SELECT getMaxBrandId FROM DUAL;

DECLARE
    pesan VARCHAR2(100);
BEGIN
    pesan := TAMBAH_PHONE(1,'A22','HP KENTANG',10,10);
    DBMS_OUTPUT.PUT_LINE(pesan);
END;

DECLARE
    pesan VARCHAR2(100);
BEGIN
    pesan := HAPUS_PHONE(9);
    DBMS_OUTPUT.PUT_LINE(pesan);
END;

-- PROCEDURE
BEGIN
    insertBrand();
END;

BEGIN
    updatebrand();
END;

BEGIN
    deletebrand();
END;

DROP SEQUENCE SEQUENCE_DETAIL_TRANSAKSI;
DROP SEQUENCE SEQUENCE_BRAND;
DROP SEQUENCE SEQUENCE_PHONES;
DROP SEQUENCE SEQUENCE_USERS;
DROP SEQUENCE SEQUENCE_TRANSAKSI;
DROP SEQUENCE SEQUENCE_SESSIONS;

DROP TABLE BRAND;
DROP TABLE PHONES;
DROP TABLE USERS;
DROP TABLE TRANSAKSI;
DROP TABLE SESSIONS;
DROP TABLE DETAIL_TRANSAKSI;

SELECT * FROM BRAND;
SELECT * FROM PHONES;
SELECT * FROM USERS;
SELECT * FROM SESSIONS;
SELECT * FROM TRANSAKSI;
SELECT * FROM DETAIL_TRANSAKSI;


SELECT * FROM TRANSAKSI WHERE TRUNC(TANGGAL) = TO_DATE('16-11-2023', 'DD-MM-YYYY');

DELETE FROM BRAND;
DELETE FROM PHONES;
DELETE FROM USERS;
DELETE FROM SESSIONS;
DELETE FROM DETAIL_TRANSAKSI;
DELETE FROM TRANSAKSI;

INSERT INTO users (NAMA_LENGKAP, TANGGAL_LAHIR, GENDER, ALAMAT, EMAIL, NO_TELP, TIPE_AKUN, USERNAME, PASSWORD) 
VALUES ('Admin', TO_DATE('01-01-2000', 'DD-MM-YYYY'), 'Laki-laki', 'Rungkut, Surabaya', 'admin@gmail.com', '0821246476','Admin', 'admin', 'admin');

INSERT INTO users (NAMA_LENGKAP, TANGGAL_LAHIR, GENDER, ALAMAT, EMAIL, NO_TELP, TIPE_AKUN, USERNAME, PASSWORD)
VALUES ('John Doe', TO_DATE('15-05-1990', 'DD-MM-YYYY'), 'Laki-laki', '123 Main Street', 'john.doe@email.com', '1234567890', 'Karyawan', 'john_doe', 'password123');

INSERT INTO users (NAMA_LENGKAP, TANGGAL_LAHIR, GENDER, ALAMAT, EMAIL, NO_TELP, TIPE_AKUN, USERNAME, PASSWORD)
VALUES ('Jane Doe', TO_DATE('01-01-2000', 'DD-MM-YYYY'), 'Perempuan', '456 Oak Street', 'jane.doe@email.com', '9876543210', 'Karyawan', 'jane_doe', 'securepass');

INSERT INTO users (NAMA_LENGKAP, TANGGAL_LAHIR, GENDER, ALAMAT, EMAIL, NO_TELP, TIPE_AKUN, USERNAME, PASSWORD)
VALUES ('Bob Smith', TO_DATE('01-01-2000', 'DD-MM-YYYY'), 'Laki-laki', '789 Pine Street', 'bob.smith@email.com', '5551234567', 'Karyawan', 'bob_smith', 'pass123word');

INSERT INTO users (NAMA_LENGKAP, TANGGAL_LAHIR, GENDER, ALAMAT, EMAIL, NO_TELP, TIPE_AKUN, USERNAME, PASSWORD)
VALUES ('Alice Johnson', TO_DATE('01-01-2000', 'DD-MM-YYYY'), 'Perempuan', '101 Cedar Street', 'alice.johnson@email.com', '9998887776', 'Karyawan', 'alice_j', 'mysecretpassword');

INSERT INTO BRAND (NAMA_BRAND) VALUES ('Samsung');
INSERT INTO BRAND (NAMA_BRAND) VALUES ('Xiaomi');
INSERT INTO BRAND (NAMA_BRAND) VALUES ('Sony');
INSERT INTO BRAND (NAMA_BRAND) VALUES ('Apple');
INSERT INTO BRAND (NAMA_BRAND) VALUES ('Oppo');
INSERT INTO BRAND (NAMA_BRAND) VALUES ('Vivo');

INSERT INTO PHONES (ID_BRAND, NAMA_HANDPHONE, DESKRIPSI, HARGA, STOK) VALUES ('1', 'S23', 'Samsung', '10000', '10');
INSERT INTO PHONES (ID_BRAND, NAMA_HANDPHONE, DESKRIPSI, HARGA, STOK) VALUES ('2', 'POCO X5', 'POCO', '20000', '10');
INSERT INTO PHONES (ID_BRAND, NAMA_HANDPHONE, DESKRIPSI, HARGA, STOK) VALUES ('3', 'Xperia 5', 'Xperia', '30000', '15');
INSERT INTO PHONES (ID_BRAND, NAMA_HANDPHONE, DESKRIPSI, HARGA, STOK) VALUES ('4', 'Iphone 15', 'Iphone','10000', '10');
INSERT INTO PHONES (ID_BRAND, NAMA_HANDPHONE, DESKRIPSI, HARGA, STOK) VALUES ('2', 'POCO M5', 'POCO','20000', '10');
INSERT INTO PHONES (ID_BRAND, NAMA_HANDPHONE, DESKRIPSI, HARGA, STOK) VALUES ('6', 'V70', 'Vivo','30000', '15');

INSERT INTO TRANSAKSI (ID_USER, NAMA_PELANGGAN, TANGGAL, TOTAL_BAYAR) VALUES 
    (1, 'Budi', TO_TIMESTAMP('15-11-2023 12:00:00', 'DD-MM-YYYY HH24:MI:SS'), 40000);
INSERT INTO detail_transaksi (ID_PHONE, JUMLAH_PEMBELIAN) VALUES (1, 4);

INSERT INTO TRANSAKSI (ID_USER, NAMA_PELANGGAN, TANGGAL, TOTAL_BAYAR) VALUES 
    (1, 'Hanzo', TO_TIMESTAMP('16-11-2023 12:00:00', 'DD-MM-YYYY HH24:MI:SS'), 140000);
INSERT INTO detail_transaksi (ID_PHONE, JUMLAH_PEMBELIAN) VALUES (2, 7);

INSERT INTO TRANSAKSI (ID_USER, NAMA_PELANGGAN, TANGGAL, TOTAL_BAYAR) VALUES 
    (1, 'Nana', TO_TIMESTAMP('17-11-2023 12:00:00', 'DD-MM-YYYY HH24:MI:SS'), 60000);
INSERT INTO detail_transaksi (ID_PHONE, JUMLAH_PEMBELIAN) VALUES (3, 2);

INSERT INTO TRANSAKSI (ID_USER, NAMA_PELANGGAN, TANGGAL, TOTAL_BAYAR) VALUES 
    (1, 'Johnson', TO_TIMESTAMP('18-11-2023 12:00:00', 'DD-MM-YYYY HH24:MI:SS'), 100000);
INSERT INTO detail_transaksi (ID_PHONE, JUMLAH_PEMBELIAN) VALUES (4, 10);

INSERT INTO TRANSAKSI (ID_USER, NAMA_PELANGGAN, TANGGAL, TOTAL_BAYAR) VALUES 
    (1, 'Chou', TO_TIMESTAMP('19-11-2023 12:00:00', 'DD-MM-YYYY HH24:MI:SS'), 240000);
INSERT INTO detail_transaksi (ID_PHONE, JUMLAH_PEMBELIAN) VALUES (6, 8);

SELECT 
    T.ID_TRANSAKSI, 
    USR.NAMA_LENGKAP AS PELAYAN, 
    T.NAMA_PELANGGAN, 
    T.TANGGAL, 
    BR.NAMA_BRAND, 
    PH.NAMA_HANDPHONE, 
    PH.HARGA, 
    DT.JUMLAH_PEMBELIAN, 
    SUM(PH.HARGA * DT.JUMLAH_PEMBELIAN) AS SUBTOTAL,
    T.TOTAL_BAYAR 
FROM TRANSAKSI T 
JOIN DETAIL_TRANSAKSI DT ON T.ID_TRANSAKSI = DT.ID_TRANSAKSI 
JOIN USERS USR ON T.ID_USER = USR.ID_USER 
JOIN PHONES PH ON DT.ID_PHONE = PH.ID_PHONE 
JOIN BRAND BR ON PH.ID_BRAND = BR.ID_BRAND
GROUP BY 
    T.ID_TRANSAKSI, 
    USR.NAMA_LENGKAP, 
    T.NAMA_PELANGGAN, 
    T.TANGGAL, 
    BR.NAMA_BRAND, 
    PH.NAMA_HANDPHONE, 
    PH.HARGA, 
    DT.JUMLAH_PEMBELIAN, 
    T.TOTAL_BAYAR
ORDER BY T.ID_TRANSAKSI;

